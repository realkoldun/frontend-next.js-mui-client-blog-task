name: Deploy Next.js site to Versel

on:
    pull_request:
        branches: ['dev']

    workflow_dispatch:

concurrency:
    group: 'pages'
    cancel-in-progress: false

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Detect package manager
              id: detect-package-manager
              run: |
                  if [ -f "${{ github.workspace }}/yarn.lock" ]; then
                    echo "manager=yarn" >> $GITHUB_OUTPUT
                    echo "command=install" >> $GITHUB_OUTPUT
                    echo "runner=yarn" >> $GITHUB_OUTPUT
                    exit 0
                  elif [ -f "${{ github.workspace }}/package.json" ]; then
                    echo "manager=npm" >> $GITHUB_OUTPUT
                    echo "command=ci" >> $GITHUB_OUTPUT
                    echo "runner=npx --no-install" >> $GITHUB_OUTPUT
                    exit 0
                  else
                    echo "Unable to determine package manager"
                    exit 1
                  fi
            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: ${{ steps.detect-package-manager.outputs.manager }}
            - name: Setup Pages
              uses: actions/configure-pages@v5
              with:

                  static_site_generator: next
            - name: Restore cache
              uses: actions/cache@v4
              with:
                  path: |
                      .next/cache
                  key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
                  restore-keys: |
                      ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

            - name: Install dependencies
              run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

            - name: Eslint
              run: ${{ steps.detect-package-manager.outputs.runner }} eslint

            - name: Prettier
              run: ${{ steps.detect-package-manager.outputs.runner }} prettier

            - name: Jest
              run: ${{ steps.detect-package-manager.outputs.runner }} test

            - name: Playwright Browsers
              run: npx playwright install --with-deps

            - name: Playwright
              run: | 
                  ${{ steps.detect-package-manager.outputs.runner }} create playwright
                  ${{ steps.detect-package-manager.outputs.runner }} e2e
              
              

            - name: Build with Next.js
              run: ${{ steps.detect-package-manager.outputs.runner }} next build
            - name: Deploy to Vercel
              run: |
                  npm i -g vercel
                  vercel --yes --token ${{ secrets.VERCEL_TOKEN }}
